[ -e /tmp/.failsafe ] && export FAILSAFE=1
clear
[ -f /etc/banner ] && cat /etc/banner
[ -n "$FAILSAFE" ] && cat /etc/banner.failsafe

fgrep -sq '/ overlay ro,' /proc/mounts && {
	echo '您的 JFFS2 分区似乎已满并且 overlayfs 挂载为只读.'
	echo '请尝试从 /overlay/upper/... 删除文件并重启!'
}

export PATH="/usr/sbin:/usr/bin:/sbin:/bin"
export HOME=$(grep -e "^${USER:-root}:" /etc/passwd | cut -d ":" -f 6)
export HOME=${HOME:-/root}
export PS1='\u@\h:\w\$ '
export ENV=/etc/shinit

case "$TERM" in
	xterm*|rxvt*)
		export PS1='\[\e]0;\u@\h: \w\a\]'$PS1
		;;
esac

[ -n "$FAILSAFE" ] || {
	for FILE in /etc/profile.d/*.sh
	do
		[ -e "$FILE" ] && . "$FILE"
	done
	unset FILE
}

Target=$([ -f /etc/openwrt_info ] && cat /etc/openwrt_info | awk 'NR==3')
Version=$([ -f /etc/openwrt_info ] && cat /etc/openwrt_info | awk 'NR==1')
[ -z "${Target}" ] && Target=$(jsonfilter -e '@.model.id' < /etc/board.json | tr ',' '_')
IP_Address=$(ifconfig -a | grep inet | grep -v 127.0.0.1 | grep -v inet6 | awk '{print $2}' | tr -d "addr:" | awk 'NR==1')
CoreMark=$([ -f /etc/bench.log ] && egrep -o "[0-9]+" /etc/bench.log | awk 'NR==1')
[ -z "${CoreMark}" ] && CoreMark=0
Srartup=$(awk '{a=$1/86400;b=($1%86400)/3600;c=($1%3600)/60} {printf("%d 天 %d 小时 %d 分钟\n",a,b,c)}' /proc/uptime)
Overlay_Available="$(df -h | grep ":/overlay" | awk '{print $4}' | awk 'NR==1')"

echo -e "\n\n           设备名称:		${Target}"
echo "           固件版本:		${Version}"
echo "           IP 地址: 		${IP_Address}"
echo "           运行时间: 		${Srartup}"
echo "           CoreMark 得分: 	${CoreMark}"
echo -e "           可用空间:		${Overlay_Available}\n"